<div
  class="bg-[#0d0d0db4] card3 scroll-trigger animate--slide-in text-white py-16 text-center flex w-full items-center justify-center relative overflow-hidden font-sans"
  style="
          background: rgba(0, 0, 0, 7.24);
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.72) 2%, rgba(0, 0, 0, 0.57) 73%, rgba(0, 0, 0, 0.74) 98%);
  "
>
  <div class="max-w-[1100px]">
    <div class="border-b pb-20 border-gray-500">
      <p class="text-[40px] md:text-[48px]/20 font-semibold uppercase">Trusted by Elite Units</p>

      <div class="flex justify-center my-6" style="color:{{ section.settings.secondary_color }}">
        <svg xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 24 24">
          <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1a6 6 0 0 0 6-6V5a2 2 0 0 0-2-2zM5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1a6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z"/>
        </svg>
      </div>

      <div id="testimony-container">
        <!-- Testimonies will be inserted here dynamically -->
      </div>
      <!-- Dots -->
      <div class="mt-6 flex justify-center gap-2" id="dot-container">
        {% for block in section.blocks %}
          {% if block.type == 'card' %}
            <span class="dot size-4 rounded-full bg-gray-600 cursor-pointer" data-index="{{ forloop.index0 }}"></span>
          {% endif %}
        {% endfor %}
      </div>
    </div>

    <div class="supporters-slider-wrapper overflow-hidden relative w-full py-6 mt-20">
      <div class="supporters-slider flex gap-12 animate-scroll whitespace-nowrap">
        {% for block in section.blocks %}
          {% if block.type == 'supporters' and block.settings.logo != blank %}
            <div class="supporter-logo inline-block shrink-0 bg-white p-2" style="background-color:white">
              <img
                src="{{ block.settings.logo | image_url }}"
                alt="Supporter Logo"
                class="h-[64px] w-[128px] object-contain rounded-lg bg-white"

                loading="lazy"
                width="128"
                height="64"
              >
            </div>
          {% endif %}
        {% endfor %}
        <!-- Duplicate logos for seamless infinite scroll -->
        {% for block in section.blocks %}
          {% if block.type == 'supporters' and block.settings.logo != blank %}
            <div class="supporter-logo inline-block shrink-0 p-2 bg-white" style="background-color:white">
              <img
                src="{{ block.settings.logo | image_url}}"
                alt="Supporter Logo"
                class="h-[64px] bg-white w-[128px] object-contain rounded-lg"
                loading="lazy"
                width="128"
                height="64"
              >
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>
  const testimonies = [
    {% for block in section.blocks %}
      {% if block.type == 'card' %}
      {
        text: `{{ block.settings.text | escape }}`,
        name: `{{ block.settings.name | escape }}`,
        primaryColor: `{{ section.settings.primary_color }}`
      }{% unless forloop.last %},{% endunless %}
    {% endif %}
    {% endfor %}
  ];

  const container = document.getElementById("testimony-container");
  const dots = document.querySelectorAll("#dot-container .dot");
  let current = 0;
  let interval;

  function showTestimony(index) {
    const t = testimonies[index];
    container.innerHTML = `
      <p class="mx-auto max-w-6xl text-3xl/15 italic font-normal">
        "${t.text}"
      </p>
      <p class="mt-6 text-2xl text-gray-400 font-semibold uppercase" style="color:${t.primaryColor}">
        â€“ ${t.name}
      </p>
    `;

    dots.forEach(dot => dot.classList.remove("active-bg"));
    dots[index].classList.add("active-bg");
  }

  function startSlider() {
    interval = setInterval(() => {
      current = (current + 1) % testimonies.length;
      showTestimony(current);
    }, 5000); // 5 seconds
  }

  dots.forEach(dot => {
    dot.addEventListener("click", () => {
      clearInterval(interval);
      current = parseInt(dot.dataset.index);
      showTestimony(current);
      startSlider(); // restart auto slide
    });
  });

  showTestimony(current);
  startSlider();
</script>

<style>
  @keyframes scroll-left {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-scroll {
    animation: scroll-left 30s linear infinite;
  }

  .supporters-slider-wrapper {
    mask-image: linear-gradient(to right, transparent, black 10%, black 90%, transparent);
    -webkit-mask-image: linear-gradient(to right, transparent, black 10%, black 90%, transparent);
  }

  .card3 {
    background-image: url('{{ section.settings.background_image | image_url: width: 1600 }}');
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }

  .active-bg {
    background-color: #7b0f23;
  }
</style>

{% schema %}
{
  "name": "Testimony Card",
  "tag": "section",
  "settings": [
    {
      "type": "color",
      "id": "primary_color",
      "label": "Primary Color",
      "default": "#AFA38E"
    },
    {
      "type": "color",
      "id": "secondary_color",
      "label": "Secondary Color",
      "default": "#7B0F23"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    }
  ],
  "blocks": [
    {
      "type": "card",
      "name": "card",
      "settings": [
        {
          "type": "textarea",
          "id": "text",
          "label": "Client's Testimony",
          "default": "Your Testimony"
        },
        {
          "type": "text",
          "id": "name",
          "label": "Client's name",
          "default": "Your Name"
        }
      ]
    },
    {
      "type": "supporters",
      "name": "suppporters",
      "settings": [
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Support's Logo"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimony Card",
      "category": "Custom"
    }
  ]
}
{% endschema %}

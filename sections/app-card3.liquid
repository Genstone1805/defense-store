<section
  class="py-20 px-6 relative"
  style="
          background: rgba(0, 0, 0, 7.24);
    background: linear-gradient(180deg, rgba(0, 0, 0, 0.73) 2%, rgba(0, 0, 0, 0.73) 73%, rgba(0, 0, 0, 0.73) 98%);
  "
>
  <div class="max-w-[1100px] mx-auto  transition-all scroll-trigger animate--slide-in duration-1000 delay-200">
    <div class="text-center mb-16">
      <h2 class="heading-tactical text-signal-white font-bold text-[36px]  uppercase md:text-[48px] mb-6">
        Trusted by Elite Units
      </h2>
    </div>
    <div class="relative max-w-7xl mx-auto mb-16">
      <div class="text-center transition-all duration-500 ease-in-out">
        <div class="flex justify-center my-6" style="color:{{ section.settings.secondary_color }}">
          <svg xmlns="http://www.w3.org/2000/svg" width="34" height="34" viewBox="0 0 24 24">
            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1a6 6 0 0 0 6-6V5a2 2 0 0 0-2-2zM5 3a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2a1 1 0 0 1 1 1v1a2 2 0 0 1-2 2a1 1 0 0 0-1 1v2a1 1 0 0 0 1 1a6 6 0 0 0 6-6V5a2 2 0 0 0-2-2z"/>
          </svg>
        </div>
        <div id="testimony-container">
          <!-- Testimonies will be inserted here dynamically -->
        </div>
      </div>
      <div class="flex justify-center mt-8 space-x-2">
        <div class="mt-6 flex justify-center gap-2" id="dot-container">
          {% for block in section.blocks %}
            {% if block.type == 'card' %}
              <button
                class="dot size-5 rounded-full transition-all duration-300 bg-border hover:bg-secondary"
                data-index="{{ forloop.index0 }}"
              ></button>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
    <div class="border-t border-border pt-12">
      <div class="supporters-slider-wrapper overflow-hidden relative w-full">
        <div class="supporters-slider flex gap-12 animate-card-scroll whitespace-nowrap">
          {% for block in section.blocks %}
            {% if block.type == 'supporters' and block.settings.logo != blank %}
              <div class="supporter-logo flex-shrink-0 bg-signal-white rounded-[8px] p-4 shadow-sm border-2 border-olive-drab">
                <img
                  src="{{ block.settings.logo | image_url }}"
                  alt="Supporter Logo"
                  class="h-[64px] w-[128px] object-contain rounded-[8px] bg-white"

                  loading="lazy"
                  width="100%"
                  height="100%"
                >
              </div>
            {% endif %}
          {% endfor %}
          <!-- Duplicate logos for seamless infinite scroll -->
          {% for block in section.blocks %}
            {% if block.type == 'supporters' and block.settings.logo != blank %}
              <div class="supporter-logo flex-shrink-0 bg-signal-white rounded-[8px] p-4 shadow-sm border-2 border-olive-drab">
                <img
                  src="{{ block.settings.logo | image_url}}"
                  alt="Supporter Logo"
                  class="h-[64px] bg-white w-[128px] object-contain rounded-[8px]"
                  loading="lazy"
                  width="100%"
                  height="100%"
                >
              </div>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      <div class="overflow-hidden">
        <div class="flex items-center gap-6 md:gap-8 animate-scroll2"></div>
      </div>
    </div>
  </div>
</section>

<script>
  const testimonies = [
    {% for block in section.blocks %}
      {% if block.type == 'card' %}
      {
        text: `{{ block.settings.text | escape }}`,
        name: `{{ block.settings.name | escape }}`,
        primaryColor: `{{ section.settings.primary_color }}`
      }{% unless forloop.last %},{% endunless %}
    {% endif %}
    {% endfor %}
  ];

  const container = document.getElementById("testimony-container");
  const dots = document.querySelectorAll("#dot-container .dot");
  let current = 0;
  let interval;

  function showTestimony(index) {
    const t = testimonies[index];
    container.innerHTML = `
    <blockquote class="body-tactical text-signal-white text-[20px]/12 md:text-[24px]/12 mb-6 italic leading-relaxed">${t.text}</blockquote>
        <cite class="subheading-tactical uppercase font-semibold text-secondary text-[18px]"> ${t.name}</cite>
    `;

    dots.forEach(dot => dot.classList.remove("bg-scarlet-red"));
    dots[index].classList.add("bg-scarlet-red");
  }

  function startSlider() {
    interval = setInterval(() => {
      current = (current + 1) % testimonies.length;
      showTestimony(current);
    }, 5000); // 5 seconds
  }

  dots.forEach(dot => {
    dot.addEventListener("click", () => {
      clearInterval(interval);
      current = parseInt(dot.dataset.index);
      showTestimony(current);
      startSlider(); // restart auto slide
    });
  });

  showTestimony(current);
  startSlider();
</script>

<style>
  @keyframes scroll {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .animate-card-scroll {
    animation: scroll 20s linear infinite;
  }

  .supporters-slider-wrapper {
    mask-image: linear-gradient(to right, transparent, black 10%, black 90%, transparent);
    -webkit-mask-image: linear-gradient(to right, transparent, black 10%, black 90%, transparent);
  }

  .card3 {
    background-image: url('{{ section.settings.background_image | image_url: width: 1600 }}');
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
  }

  .active-bg {
    background-color: #7b0f23;
  }
</style>

{% schema %}
{
  "name": "Testimony Card",
  "tag": "section",
  "settings": [
    {
      "type": "color",
      "id": "primary_color",
      "label": "Primary Color",
      "default": "#AFA38E"
    },
    {
      "type": "color",
      "id": "secondary_color",
      "label": "Secondary Color",
      "default": "#7B0F23"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Background Image"
    }
  ],
  "blocks": [
    {
      "type": "card",
      "name": "card",
      "settings": [
        {
          "type": "textarea",
          "id": "text",
          "label": "Client's Testimony",
          "default": "Your Testimony"
        },
        {
          "type": "text",
          "id": "name",
          "label": "Client's name",
          "default": "Your Name"
        }
      ]
    },
    {
      "type": "supporters",
      "name": "suppporters",
      "settings": [
        {
          "type": "image_picker",
          "id": "logo",
          "label": "Support's Logo"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimony Card",
      "category": "Custom"
    }
  ]
}
{% endschema %}
